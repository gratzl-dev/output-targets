import type { ComponentCompilerMeta } from '@stencil/core/internal';
import path from 'node:path';
import { Project } from 'ts-morph';
import { kebabToPascalCase } from './utils/string-utils.js';

export const createEsModulesComponentsFile = async ({
  components,
  project,
  outDir,
}: {
  components: ComponentCompilerMeta[];
  project?: Project;
  outDir?: string;
}) => {
  const tsProject = project || new Project({ useInMemoryFileSystem: true });
  const disableEslint = `/* eslint-disable */\n`;
  const autogeneratedComment = `/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */\n\n`;
  const outFile = path.join(outDir || '', 'components.ts');
  const sourceFile = tsProject.createSourceFile(outFile, autogeneratedComment + disableEslint, {
    overwrite: true,
  });

  for (const component of components) {
    const tagName = component.tagName;
    const reactTagName = kebabToPascalCase(tagName);
    const fileName = component.tagName;
    sourceFile.addExportDeclaration({
      moduleSpecifier: `./${fileName}.js`,
      namedExports: [reactTagName],
    });
  }

  sourceFile.organizeImports();
  sourceFile.formatText();
  await sourceFile.save();

  return sourceFile;
};
